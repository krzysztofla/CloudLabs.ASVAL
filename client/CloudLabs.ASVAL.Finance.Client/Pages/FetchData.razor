@page "/fetchdata"
@using Grpc.Net.Client
@using CloudLabs.ASVAL.Finance.Currency
@using Grpc.Net.Client.Web
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Temp. (F)</th>
            <th>Summary</th>
        </tr>
        </thead>
        <tbody>
        @* @foreach (var forecast in forecasts) *@
        @* { *@
        @*     <tr> *@
        @*         <td>@forecast.Symbol</td> *@
        @*         <td>@forecast.Timestamp</td> *@
        @*         <td>@forecast.Value</td> *@
        @*     </tr> *@
        @* } *@
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
        var channel = GrpcChannel.ForAddress("https://localhost:7108", new GrpcChannelOptions
        {
            HttpHandler = new GrpcWebHandler(new HttpClientHandler())
        });

        var client = new Greeter.GreeterClient(channel);
        var response = await client.SayHelloAsync(new HelloRequest { Name = ".Krzysztof" });

    }

    public class WeatherForecast
    {
        public long Timestamp { get; set; }

        public string Symbol { get; set; }

        public int Value { get; set; }
    }

}